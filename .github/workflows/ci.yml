name: CI

on:
  push:
    branches: [main, develop, init]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test on Node ${{ matrix.node }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: [18, 20, 22]
        os: [ubuntu-latest, windows-latest, macos-latest]
        # Exclude some combinations to speed up CI
        exclude:
          - os: windows-latest
            node: 18
          - os: macos-latest
            node: 18

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Format check
        run: npm run format -- --check

      - name: Build
        run: npm run build

      - name: Unit tests
        run: npx vitest run --exclude="**/logger.test.ts" --exclude="**/index.test.ts" --exclude="**/mcp-protocol.test.ts" --coverage

      # - name: Integration tests
      #   run: npx vitest run --config vitest.integration.config.ts --exclude="**/mcp-protocol.test.ts" --exclude="**/cli-install.test.ts"

      - name: Upload coverage to Codecov
        if: matrix.node == 20 && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: false

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Security audit
        run: npm audit --audit-level high

      - name: Check for vulnerabilities
        run: npx audit-ci --config .auditci.json

  build-and-package:
    name: Build and Package
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Package CLI
        run: |
          cd packages/dxt-workspaces
          npm pack

      - name: Upload CLI package
        uses: actions/upload-artifact@v4
        with:
          name: dxt-workspaces-package
          path: packages/dxt-workspaces/*.tgz

      - name: Test CLI installation
        run: |
          npm install -g packages/dxt-workspaces/*.tgz
          dxt-workspaces --version
          dxt-workspaces --help
