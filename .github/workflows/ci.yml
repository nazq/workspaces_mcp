name: CI

on:
  push:
    branches: [main, develop, init, test_cov]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test on Node ${{ matrix.node }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: [20, 22, 24]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Format check
        run: npm run format -- --check

      - name: Build
        run: npm run build

      - name: Unit tests
        run: npx vitest run --exclude="**/logger.test.ts" --exclude="**/index.test.ts" --exclude="**/mcp-protocol.test.ts" --coverage

      - name: MCP Protocol Integration tests
        run: npx vitest run tests/integration/mcp-protocol.test.ts --config vitest.integration.config.ts

      # CLI integration tests still need fixes
      # - name: CLI Integration tests
      #   run: npx vitest run tests/integration/cli-install.test.ts --config vitest.integration.config.ts

      - name: Upload coverage to Codecov
        if: matrix.node == 20 && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          slug: nazq/workspaces_mcp
          fail_ci_if_error: false

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Security audit
        run: npm audit --audit-level high

      - name: Check for vulnerabilities
        run: npx audit-ci --config .auditci.json

  build-and-package:
    name: Build and Package DXT
    runs-on: ubuntu-latest
    needs: [test]
    permissions:
      contents: read
      actions: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate manifest
        run: |
          echo "🔍 Validating manifest.json..."
          if [ ! -f manifest.json ]; then
            echo "❌ manifest.json not found"
            exit 1
          fi
          echo "✅ manifest.json found"
          cat manifest.json | jq '.' > /dev/null || (echo "❌ Invalid JSON in manifest.json" && exit 1)
          echo "✅ manifest.json is valid JSON"

      - name: Build DXT package
        run: |
          echo "📦 Building DXT package..."
          npm run dxt:package
          ls -la *.dxt

      - name: Upload DXT package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: workspaces-mcp-dxt-${{ github.sha }}
          path: '*.dxt'
          retention-days: 30
